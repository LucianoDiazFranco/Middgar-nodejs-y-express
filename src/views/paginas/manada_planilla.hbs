<main>
    <section class="banner">
        <img src="/img/logomanada.png" alt="Logo Lobatos y Lobeznas" class="img-border">
        <h1>El mundo de la fantasía y los juegos te están llamando</h1>
        <h2>Lobatos y Lobeznas: 7 a 11 años</h2>
    </section>
    <section class="content">
        <div class="activities"> 
            <input type="text" placeholder="Buscar...">
            <div class="buttons">
                <a href="/planilla_riesgo"><button class="icon-button"><i class="fa-solid fa-file"></i> Agregar Planilla de Riesgo</button></a> 
            </div>
            <ul id="pdf-list">
            </ul> <!-- Mostrar los PDF -->
            <div id="status" class="status-message"></div>
        </div>
    </section>
</main>

<script>
    const pdfList = document.getElementById("pdf-list");

    // Función para cargar los PDFs desde el servidor
    async function loadPDFs() {
        try {
            const response = await fetch('/list-pdfs');
            const pdfFiles = await response.json();
            
            pdfList.innerHTML = ''; // Limpiar la lista antes de cargar nuevos elementos

            // Añadir cada archivo PDF a la lista
            pdfFiles.forEach(file => {
                const li = document.createElement('li');
                const link = document.createElement('a');
                link.href = `/uploads/planilla_riesgo/${file}`;
                link.textContent = file;
                link.target = '_blank'; // Abrir en nueva pestaña

                // Crear botón de eliminar
                const deleteButton = document.createElement('button');
                deleteButton.innerHTML = '<i class="fa-solid fa-trash"></i>'; // Ícono de borrar de Font Awesome
                deleteButton.className = 'delete-btn';
                deleteButton.setAttribute('data-filename', file); // Asignar el nombre del archivo al botón

                // Evento para eliminar el archivo al hacer clic
                deleteButton.addEventListener('click', async function() {
                    if (confirm(`¿Estás seguro de que quieres eliminar el archivo ${file}?`)) {
                        await deletePDF(file);  // Llamar a la función de eliminación
                    }
                });

                li.appendChild(link);
                li.appendChild(deleteButton);
                pdfList.appendChild(li);
            });
        } catch (error) {
            console.error('Error al cargar los archivos PDF:', error);
        }
    }

    // Función para eliminar un archivo PDF
    async function deletePDF(filename) {
        try {
            const response = await fetch(`/delete-pdf/${filename}`, {
                method: 'DELETE'
            });
            if (response.ok) {
                loadPDFs();  // Recargar la lista de PDFs después de la eliminación
            } else {
                console.error('Error al eliminar el archivo');
            }
        } catch (error) {
            console.error('Error en la solicitud de eliminación:', error);
        }
    }

    // Cargar PDFs cuando se carga la página
    window.addEventListener('load', loadPDFs);
</script>
