<main>
    <section class="banner">
        <img src="/img/logomanada.png" alt="Logo Lobatos y Lobeznas" class="img-border">
        <h1>El mundo de la fantasía y los juegos te están llamando</h1>
        <h2>Lobatos y Lobeznas: 7 a 11 años</h2>
    </section>
    <section class="content">
        <div class="activities">
            <input type="text" placeholder="Buscar...">
            <div class="buttons">
                <label for="pdfUploader" id="boton1" class="upload-label icon-button"><i class="fa-solid fa-file-pdf"></i> Cargar PDF</label>
                <input type="file" id="pdfUploader" name="pdfs" accept="application/pdf" multiple />
                <a href="/listPlanillasManada"><button id="boton1" class="icon-button"><i class="fa-solid fa-file"></i> Planilla de Riesgo</button></a>
                <a href="/listManada"><button id="boton1" class="icon-button"><i class="fa-solid fa-user"></i> Miembros</button></a>
            </div>
            <ul id="pdf-list"></ul>
            <div id="status" class="status-message"></div>
        </div>
    </section>
</main>

<script>
    const pdfUploader = document.getElementById("pdfUploader");
    const pdfList = document.getElementById("pdf-list");

    // Función para cargar los archivos PDF desde el servidor
    async function loadPDFs() {
        try {
            const response = await fetch('/pdf/list-pdfs/Manada');
            const pdfFiles = await response.json();
            
            pdfList.innerHTML = ''; // Limpiar la lista antes de cargar nuevos elementos

            pdfFiles.forEach(file => {
                const li = document.createElement('li');
                const link = document.createElement('a');
                link.href = `/uploads/${encodeURIComponent(file)}`;
                link.textContent = file;
                link.target = '_blank';

                const deleteButton = document.createElement('button');
                deleteButton.innerHTML = '<i class="fa-solid fa-trash"></i>';
                deleteButton.className = 'delete-btn';
                deleteButton.setAttribute('data-filename', file);

                deleteButton.addEventListener('click', async function() {
                    if (confirm(`¿Estás seguro de que quieres eliminar el archivo ${file}?`)) {
                        await deletePDF(file);
                    }
                });

                li.appendChild(link);
                li.appendChild(deleteButton);
                pdfList.appendChild(li);
            });
        } catch (error) {
            console.error('Error al cargar los archivos PDF:', error);
        }
    }

    // Función para eliminar un archivo PDF
    async function deletePDF(filename) {
        try {
            const response = await fetch(`/pdf/delete-pdf/${encodeURIComponent(filename)}`, {
                method: 'DELETE'
            });
            if (response.ok) {
                loadPDFs();
            } else {
                console.error('Error al eliminar el archivo');
            }
        } catch (error) {
            console.error('Error en la solicitud de eliminación:', error);
        }
    }

    window.addEventListener('load', loadPDFs);

    pdfUploader.addEventListener("change", async function () {
        const formData = new FormData();
        formData.append("rama", "Manada");

        for (let i = 0; i < pdfUploader.files.length; i++) {
            const file = pdfUploader.files[i];
            if (file.type === "application/pdf") {
                formData.append("pdfs", file);
            }
        }

        const response = await fetch("/pdf/upload", {
            method: "POST",
            body: formData
        });

        if (response.ok) {
            loadPDFs();
        } else {
            console.error('Error al cargar archivos');
        }
    });
</script>
