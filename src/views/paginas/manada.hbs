<main>
        <section class="banner">
            <img src="/img/Manada.png" alt="Logo Lobatos y Lobeznas">
            <h1>El mundo de la fantas√≠a y los juegos te est√°n llamando</h1>
            <h2>Lobatos y Lobeznas: 7 a 11 a√±os</h2>
        </section>
        <section class="content">
            <div class="activities">
                <input type="text" placeholder="Buscar...">
                <div class="buttons">
                    <label for="pdfUploader" class="upload-label">üìÑ Cargar PDFs</label>
                    <input type="file" id="pdfUploader" name="pdfs" accept="application/pdf" multiple />
                    <a href="/planilla_riesgo"><button>Agregar Planilla de Riesgo</button></a>
                    <a href="/list"><button>üë•</button></a>
                </div>
                    <ul id="pdf-list">
                    </ul> <!--Mostrar los PDF -->
            </div>
            
        </section>
</main>
<!-- Formulario oculto para subir archivos -->
<form id="uploadForm" enctype="multipart/form-data" style="display: none;">
    <input type="file" id="pdfUploaderHidden" name="pdfs" accept="application/pdf" multiple />
</form>

<div id="status" class="status-message"></div>

<script>
    const form = document.getElementById("uploadForm");
    const pdfUploader = document.getElementById("pdfUploader");
    const pdfList = document.getElementById("pdf-list");

    // Funci√≥n para cargar los archivos PDF desde el servido
    async function loadPDFs() {
        try {
            const response = await fetch('/list-pdfs');
            const pdfFiles = await response.json();
            
            pdfList.innerHTML = ''; // Limpiar la lista antes de cargar nuevos elementos

            // A√±adir cada archivo PDF a la lista
            pdfFiles.forEach(file => {
                const li = document.createElement('li');
                const link = document.createElement('a');
                link.href = `/uploads/${file}`;
                link.textContent = file;
                link.target = '_blank'; // Abrir en nueva pesta√±a
                li.appendChild(link);
                pdfList.appendChild(li);
            });
        } catch (error) {
            console.error('Error al cargar los archivos PDF:', error);
        }
    }

    // Cargar PDFs cuando se carga la p√°gina
    window.addEventListener('load', loadPDFs);

    pdfUploader.addEventListener("change", async function () {
        const formData = new FormData();

        // A√±adir cada archivo al FormData
        for (let i = 0; i < pdfUploader.files.length; i++) {
            formData.append("pdfs", pdfUploader.files[i]);
        }

        // Enviar los archivos al servidor
        const response = await fetch("/upload", {
            method: "POST",
            body: formData
        });

        const statusMessage = document.getElementById("status");
        
        if (!response.ok) {
            const errorMessage = await response.text();
            statusMessage.innerText = `Error: ${errorMessage}`;
            statusMessage.className = "status-message error"; // Clase de error
            statusMessage.style.display = "block"; // Mostrar mensaje
            return;
        }

        const result = await response.text();
        statusMessage.innerText = result;
        statusMessage.className = "status-message success"; // Clase de √©xito
        statusMessage.style.display = "block"; // Mostrar mensaje

        // Ocultar el mensaje despu√©s de unos segundos
        setTimeout(() => {
            statusMessage.style.display = "none"; // Ocultar mensaje
        }, 3000); // Tiempo en milisegundos

        // Recargar la lista de PDFs despu√©s de subir nuevos archivos
        loadPDFs();
    });
</script>